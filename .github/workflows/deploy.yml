name: Deploy to Azure Static Web Apps

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  build_and_test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run linting
        run: |
          flake8 scripts tests --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check scripts tests

      - name: Run tests
        run: |
          pytest --cov=scripts --cov-report=xml --cov-report=term

      - name: Generate visualizations
        run: |
          echo "Generating HTML visualizations for deployment..."
          python -m scripts.visualizations.destinations_map
          python -m scripts.visualizations.cost_comparison
          python -m scripts.visualizations.flight_prices
          python -m scripts.visualizations.weather_forecast

      - name: Prepare deployment artifacts
        run: |
          mkdir -p deployment
          cp -r .build/visualizations/* deployment/
          cp README.md deployment/
          echo "Build completed at $(date)" > deployment/build-info.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: visualizations
          path: deployment/
          retention-days: 30

  deploy_to_azure:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs: build_and_test
    runs-on: ubuntu-latest
    name: Deploy to Azure Static Web Apps
    environment:
      name: ${{ github.event_name == 'push' && 'production' || 'preview' }}
      url: ${{ steps.deploy.outputs.static_web_app_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: visualizations
          path: deployment/

      - name: Deploy to Azure Static Web Apps
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "deployment"
          api_location: ""
          output_location: ""
          skip_app_build: true

      - name: Deployment health check
        if: success()
        run: |
          echo "Deployment successful!"
          echo "Environment: ${{ github.event_name == 'push' && 'production' || 'preview' }}"
          echo "URL: ${{ steps.deploy.outputs.static_web_app_url }}"

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request

    steps:
      - name: Close Azure Static Web Apps
        id: close
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
